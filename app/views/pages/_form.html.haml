- newly = @page.new_record?
- form_url = newly ? wiki_information_pages_path(@wiki_info) : wiki_information_page_path(@wiki_info, @page)
- http_method = newly ? :post : :put
= form_for(@page, :url => form_url, :method => http_method) do |f|

  = error_messages_for(@page)

  - if @page.new_record?
    .field
      = f.text_field :name, :required => true, :placeholder => Page.human_attribute_name('name')
  = f.text_area :body, :class => 'span9', :rows => 10, :id => 'source'
  = f.submit (newly ? t('actions.regist') : t('actions.update')), :class => 'btn btn-primary'

.editable= @page.raw_content

  %hr

:javascript

  jQuery(document).ready(function() {
    // Enable Hallo editor
    jQuery('.editable').hallo({
      plugins: {
        'halloformat': {},
        'halloblock': {},
        'hallolists': {},
        'halloreundo': {}
      }
    });

    var markdownize = function(content) {
      var html = content.split("\n").map($.trim).filter(function(line) {
        return line != "";
      }).join("\n");
      return toMarkdown(html);
    };

    var converter = new Showdown.converter();
    var htmlize = function(content) {
      return converter.makeHtml(content);
    };

    // Method that converts the HTML contents to Markdown
    var showSource = function(content) {
      var markdown = markdownize(content);
      if (jQuery('#source').get(0).value == markdown) {
        return;
      }
      jQuery('#source').get(0).value = markdown;
    };


    var updateHtml = function(content) {
      if (markdownize(jQuery('.editable').html()) == content) {
        return;
      }
      var html = htmlize(content);
      jQuery('.editable').html(html);
    };

    // Update Markdown every time content is modified
    jQuery('.editable').bind('hallomodified', function(event, data) {
      showSource(data.content);
    });
    jQuery('#source').bind('keyup', function() {
      updateHtml(this.value);
    });
    showSource(jQuery('.editable').html());
  });

