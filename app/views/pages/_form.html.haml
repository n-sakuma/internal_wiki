- newly = @page.new_record?
- form_url = newly ? wiki_information_pages_path(@wiki_info) : wiki_information_page_path(@wiki_info, @page)
- http_method = newly ? :post : :put
= form_for(@page, :url => form_url, :method => http_method) do |f|

  = error_messages_for(@page)

  - if @page.new_record?
    .field
      = f.text_field :name, :required => true, :placeholder => Page.human_attribute_name('name')
  = f.text_area :body, :class => 'span9', :rows => 10, :id => 'source'
  = f.submit (newly ? t('actions.regist') : t('actions.update')), :class => 'btn btn-primary'

%fieldset
  %legend Preview
  .well.well-small.editable= raw @page.content


:coffeescript

  $(document).ready ->
    # Enable Hallo editor
    $('.editable').hallo
      plugins:
        'halloformat': {}
        'halloblock': {}
        'hallolists': {}
        'halloreundo': {}

    markdownize = (content) ->
      html = content.split("\n").map($.trim).join("\n")
      toMarkdown(html)

    converter = new Showdown.converter()
    htmlize = (content) -> converter.makeHtml content

    # Method that converts the HTML contents to Markdown
    showSource = (content) ->
      markdown = markdownize content
      return if $('#source').get(0).value is markdown
      $('#source').get(0).value is markdown

    updateHtml = (content) ->
      return if markdownize($('.editable').html()) is content
      html = htmlize content
      $('.editable').html(html)

    # Update Markdown every time content is modified
    $('.editable').bind 'hallomodified', (event, data) -> showSource data.content

    $('#source').bind 'keyup', -> updateHtml this.value

    showSource $('.editable').html()

